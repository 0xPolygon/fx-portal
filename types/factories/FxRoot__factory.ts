/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxRoot, FxRootInterface } from "../FxRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stateSender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessageToChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    name: "setFxChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSender",
    outputs: [
      {
        internalType: "contract IStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104d03803806104d083398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61043f806100916000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063450d11f014610051578063b47204771461006f578063b86cfdcf14610084578063cb10f94c14610097575b600080fd5b61005961009f565b60405161006691906102e4565b60405180910390f35b61008261007d366004610266565b6100bb565b005b610082610092366004610245565b610196565b610059610200565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b6000338484846040516020016100d49493929190610305565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526000546001547f16f1983100000000000000000000000000000000000000000000000000000000845291935073ffffffffffffffffffffffffffffffffffffffff908116926316f198319261015e921690859060040161037a565b600060405180830381600087803b15801561017857600080fd5b505af115801561018c573d6000803e3d6000fd5b5050505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff16156101b957600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b803573ffffffffffffffffffffffffffffffffffffffff8116811461024057600080fd5b919050565b600060208284031215610256578081fd5b61025f8261021c565b9392505050565b60008060006040848603121561027a578182fd5b6102838461021c565b9250602084013567ffffffffffffffff8082111561029f578384fd5b818601915086601f8301126102b2578384fd5b8135818111156102c0578485fd5b8760208285010111156102d1578485fd5b6020830194508093505050509250925092565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff80871683528086166020840152506060604083015282606083015282846080840137818301608090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601019392505050565b600073ffffffffffffffffffffffffffffffffffffffff8416825260206040818401528351806040850152825b818110156103c3578581018301518582016060015282016103a7565b818111156103d45783606083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160600194935050505056fea2646970667358221220ad1ee6e60a2c78441778ecdb5e86c8db8580a79866daf72a1b23f1c4d47c420564736f6c63430008000033";

export class FxRoot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxRoot> {
    return super.deploy(_stateSender, overrides || {}) as Promise<FxRoot>;
  }
  getDeployTransaction(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stateSender, overrides || {});
  }
  attach(address: string): FxRoot {
    return super.attach(address) as FxRoot;
  }
  connect(signer: Signer): FxRoot__factory {
    return super.connect(signer) as FxRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxRootInterface {
    return new utils.Interface(_abi) as FxRootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FxRoot {
    return new Contract(address, _abi, signerOrProvider) as FxRoot;
  }
}
