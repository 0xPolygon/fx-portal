/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxChild, FxChildInterface } from "../FxChild";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NewFxMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onStateReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    name: "setFxRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610579806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806326c53bea146100465780634c8ff99e1461005b578063de9b771f1461006e575b600080fd5b610059610054366004610340565b61008c565b005b610059610069366004610237565b6101b1565b61007661021b565b6040516100839190610420565b60405180910390f35b33611001146100d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100c790610483565b60405180910390fd5b600080806100e08486018661025a565b9250925092507ff091cd9cbbaff01426d8183042dff452ef18e6690f19816d5dd114e00761e0e883838360405161011993929190610441565b60405180910390a16040517f9a7c4b7100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690639a7c4b7190610177908990879086906004016104ba565b600060405180830381600087803b15801561019157600080fd5b505af11580156101a5573d6000803e3d6000fd5b50505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff16156101d457600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600060208284031215610248578081fd5b81356102538161051e565b9392505050565b60008060006060848603121561026e578182fd5b83356102798161051e565b925060208481013561028a8161051e565b9250604085013567ffffffffffffffff808211156102a6578384fd5b818701915087601f8301126102b9578384fd5b8135818111156102cb576102cb6104ef565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116820101818110848211171561030c5761030c6104ef565b60405281815283820185018a1015610322578586fd5b81858501868301378585838301015280955050505050509250925092565b600080600060408486031215610354578283fd5b83359250602084013567ffffffffffffffff80821115610372578384fd5b818601915086601f830112610385578384fd5b813581811115610393578485fd5b8760208285010111156103a4578485fd5b6020830194508093505050509250925092565b60008151808452815b818110156103dc576020818501810151868301820152016103c0565b818111156103ed5782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff80861683528085166020840152506060604083015261047a60608301846103b7565b95945050505050565b6020808252600e908201527f496e76616c69642073656e646572000000000000000000000000000000000000604082015260600190565b600084825273ffffffffffffffffffffffffffffffffffffffff841660208301526060604083015261047a60608301846103b7565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461054057600080fd5b5056fea264697066735822122041098199b7a7a8a7f561064d0f2ed0c9b84bf2fc17903795199f153536a2e1c664736f6c63430008000033";

export class FxChild__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxChild> {
    return super.deploy(overrides || {}) as Promise<FxChild>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FxChild {
    return super.attach(address) as FxChild;
  }
  connect(signer: Signer): FxChild__factory {
    return super.connect(signer) as FxChild__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxChildInterface {
    return new utils.Interface(_abi) as FxChildInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxChild {
    return new Contract(address, _abi, signerOrProvider) as FxChild;
  }
}
