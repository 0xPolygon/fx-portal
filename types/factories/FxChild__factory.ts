/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxChild, FxChildInterface } from "../FxChild";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "NewFxMessage",
    type: "event",
  },
  {
    inputs: [],
    name: "fxRoot",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onStateReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRoot",
        type: "address",
      },
    ],
    name: "setFxRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806326c53bea146100465780634c8ff99e1461005b578063de9b771f1461006e575b600080fd5b6100596100543660046102fc565b61008c565b005b6100596100693660046101f3565b61016d565b6100766101d7565b60405161008391906103dc565b60405180910390f35b6000808061009c84860186610216565b9250925092507ff091cd9cbbaff01426d8183042dff452ef18e6690f19816d5dd114e00761e0e88383836040516100d5939291906103fd565b60405180910390a16040517f9a7c4b7100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690639a7c4b71906101339089908790869060040161043f565b600060405180830381600087803b15801561014d57600080fd5b505af1158015610161573d6000803e3d6000fd5b50505050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff161561019057600080fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b600060208284031215610204578081fd5b813561020f816104a3565b9392505050565b60008060006060848603121561022a578182fd5b8335610235816104a3565b9250602084810135610246816104a3565b9250604085013567ffffffffffffffff80821115610262578384fd5b818701915087601f830112610275578384fd5b81358181111561028757610287610474565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011682010181811084821117156102c8576102c8610474565b60405281815283820185018a10156102de578586fd5b81858501868301378585838301015280955050505050509250925092565b600080600060408486031215610310578283fd5b83359250602084013567ffffffffffffffff8082111561032e578384fd5b818601915086601f830112610341578384fd5b81358181111561034f578485fd5b876020828501011115610360578485fd5b6020830194508093505050509250925092565b60008151808452815b818110156103985760208185018101518683018201520161037c565b818111156103a95782602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8086168352808516602084015250606060408301526104366060830184610373565b95945050505050565b600084825273ffffffffffffffffffffffffffffffffffffffff84166020830152606060408301526104366060830184610373565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146104c557600080fd5b5056fea2646970667358221220544103532f045452eef6510c2ddf6dd7e95734b820c74c1267e76abe1942128764736f6c63430008000033";

export class FxChild__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxChild> {
    return super.deploy(overrides || {}) as Promise<FxChild>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FxChild {
    return super.attach(address) as FxChild;
  }
  connect(signer: Signer): FxChild__factory {
    return super.connect(signer) as FxChild__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxChildInterface {
    return new utils.Interface(_abi) as FxChildInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxChild {
    return new Contract(address, _abi, signerOrProvider) as FxChild;
  }
}
