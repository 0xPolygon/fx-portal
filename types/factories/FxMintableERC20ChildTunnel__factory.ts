/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FxMintableERC20ChildTunnel,
  FxMintableERC20ChildTunnelInterface,
} from "../FxMintableERC20ChildTunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
      {
        internalType: "address",
        name: "_childTokenTemplate",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rootTokenTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "childToken",
        type: "address",
      },
    ],
    name: "TokenMapped",
    type: "event",
  },
  {
    inputs: [],
    name: "DEPOSIT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childTokenTemplate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computedCreate2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "uniqueId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals",
        type: "uint8",
      },
    ],
    name: "deployChildToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "childToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rootToChildToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rootTokenTemplateCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "childToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c9638038062001c9683398101604081905262000034916200018b565b600080546001600160a01b031916339081178255604051859282917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600180546001600160a01b03199081166001600160a01b039384161790915560048054909116918416919091179055620000af82620000f7565b620000d75760405162461bcd60e51b8152600401620000ce9062000211565b60405180910390fd5b620000e28162000107565b80516020909101206005555062000248915050565b63ffffffff813b1615155b919050565b604051606090693d602d80600a3d3981f360b01b9069363d3d373d3d3d363d7360b01b9084841b906e5af43d82803e903d91602b57fd5bf360881b9062000159908590859085908590602001620001d4565b604051602081830303815290604052945050505050919050565b80516001600160a01b03811681146200010257600080fd5b600080600060608486031215620001a0578283fd5b620001ab8462000173565b9250620001bb6020850162000173565b9150620001cb6040850162000173565b90509250925092565b6001600160b01b0319948516815292909316600a8301526001600160601b03191660148201526001600160881b0319909116602882015260370190565b6020808252601e908201527f546f6b656e2074656d706c617465206973206e6f7420636f6e74726163740000604082015260600190565b611a3e80620002586000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638da5cb5b11610097578063d81c8e5211610066578063d81c8e52146101ae578063ea60c7c4146101b6578063f2fde38b146101c9578063f3fef3a3146101dc576100f5565b80638da5cb5b146101765780639a7c4b711461017e578063a3984fec14610191578063b68ad1e4146101a6576100f5565b80637337957f116100d35780637337957f1461013557806379c65068146101485780637f1e9cb01461015b5780638883709414610163576100f5565b806301f1d031146100fa578063450d11f014610123578063715018a61461012b575b600080fd5b61010d610108366004611307565b6101ef565b60405161011a9190611469565b60405180910390f35b61010d610437565b610133610453565b005b61010d6101433660046111b8565b6104f9565b61013361015636600461118d565b61053a565b61010d61070f565b6101336101713660046110d5565b61072b565b61010d6107a8565b61013361018c366004611283565b6107c4565b610199610842565b60405161011a9190611460565b61010d610848565b610199610864565b61010d6101c43660046110d5565b610888565b6101336101d73660046110d5565b6108b0565b6101336101ea36600461118d565b6109a7565b6000805473ffffffffffffffffffffffffffffffffffffffff1633146102305760405162461bcd60e51b815260040161022790611838565b60405180910390fd5b6000856040516020016102439190611460565b60408051601f19818403018152919052805160209091012060045490915060009061028590839073ffffffffffffffffffffffffffffffffffffffff16610d35565b905060008160405160200161029a91906113cc565b60408051601f1981840301815291905280516020909101206005546002549192506000916102df91849173ffffffffffffffffffffffffffffffffffffffff166104f9565b73ffffffffffffffffffffffffffffffffffffffff80821660009081526003602052604090205491925016156103275760405162461bcd60e51b815260040161022790611667565b73ffffffffffffffffffffffffffffffffffffffff81811660008181526003602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169488169485179055517f85920d35e6c72f6b2affffa04298b0cecfeba86e4a9f407df661f1cb8ab5e6179190a36040517f8420ce9900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690638420ce99906103f990309085908d908d908d90600401611537565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050505050505050949350505050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461048a5760405162461bcd60e51b815260040161022790611838565b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b60008060ff60f81b83868660405160200161051794939291906113fc565b60408051601f1981840301815291905280516020909101209150505b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146105715760405162461bcd60e51b815260040161022790611838565b600082905060008173ffffffffffffffffffffffffffffffffffffffff16630a8a49146040518163ffffffff1660e01b815260040160206040518083038186803b1580156105be57600080fd5b505afa1580156105d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105f691906110f1565b905073ffffffffffffffffffffffffffffffffffffffff841615801590610632575073ffffffffffffffffffffffffffffffffffffffff811615155b8015610667575073ffffffffffffffffffffffffffffffffffffffff8082166000908152600360205260409020548582169116145b6106835760405162461bcd60e51b8152600401610227906117db565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906340c10f19906106d79033908790600401611598565b600060405180830381600087803b1580156106f157600080fd5b505af1158015610705573d6000803e3d6000fd5b5050505050505050565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff16156107615760405162461bcd60e51b8152600401610227906118ca565b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff1690565b60015473ffffffffffffffffffffffffffffffffffffffff1633146107fb5760405162461bcd60e51b81526004016102279061160a565b61083c848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610dd492505050565b50505050565b60055481565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b7f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f82181565b60036020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108e75760405162461bcd60e51b815260040161022790611838565b73ffffffffffffffffffffffffffffffffffffffff811661091a5760405162461bcd60e51b815260040161022790611721565b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b600082905060008173ffffffffffffffffffffffffffffffffffffffff16630a8a49146040518163ffffffff1660e01b815260040160206040518083038186803b1580156109f457600080fd5b505afa158015610a08573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a2c91906110f1565b905073ffffffffffffffffffffffffffffffffffffffff841615801590610a68575073ffffffffffffffffffffffffffffffffffffffff811615155b8015610a9d575073ffffffffffffffffffffffffffffffffffffffff8082166000908152600360205260409020548582169116145b610ab95760405162461bcd60e51b8152600401610227906117db565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff831690639dc29fac90610b0d9033908790600401611598565b600060405180830381600087803b158015610b2757600080fd5b505af1158015610b3b573d6000803e3d6000fd5b50505050600084905060008173ffffffffffffffffffffffffffffffffffffffff166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015610b8c57600080fd5b505afa158015610ba0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610bc89190810190611235565b905060008273ffffffffffffffffffffffffffffffffffffffff166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015610c1257600080fd5b505afa158015610c26573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610c4e9190810190611235565b905060008373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd09190611384565b90506000838383604051602001610ce9939291906115d1565b6040516020818303038152906040529050610d2a868a338b85604051602001610d169594939291906114e5565b604051602081830303815290604052610e81565b505050505050505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152846037826000f592505073ffffffffffffffffffffffffffffffffffffffff8216610dcd5760405162461bcd60e51b81526004016102279061186d565b5092915050565b600254829073ffffffffffffffffffffffffffffffffffffffff808316911614610e105760405162461bcd60e51b8152600401610227906116c4565b60008083806020019051810190610e2791906111f0565b915091507f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f821821415610e6157610e5c81610ebb565b610e79565b60405162461bcd60e51b81526004016102279061177e565b505050505050565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b03681604051610eb091906115be565b60405180910390a150565b600080600080600085806020019051810190610ed7919061110d565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260036020526040908190205490517f40c10f19000000000000000000000000000000000000000000000000000000008152969b5094995092975090955093501690819081906340c10f1990610f4f9088908890600401611598565b600060405180830381600087803b158015610f6957600080fd5b505af1158015610f7d573d6000803e3d6000fd5b50505050610f8a85611029565b15610705576000621e8480905060008089858a8a8a8a604051602401610fb59695949392919061148a565b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f166480c20000000000000000000000000000000000000000000000000000000017815281519192506000918291828c88f1505050505050505050505050565b3b63ffffffff16151590565b600061104861104384611951565b611927565b905082815283838301111561105c57600080fd5b610533836020830184611979565b600082601f83011261107a578081fd5b61053383835160208501611035565b600082601f830112611099578081fd5b81356110a761104382611951565b8181528460208386010111156110bb578283fd5b816020850160208301379081016020019190915292915050565b6000602082840312156110e6578081fd5b8135610533816119d4565b600060208284031215611102578081fd5b8151610533816119d4565b600080600080600060a08688031215611124578081fd5b855161112f816119d4565b6020870151909550611140816119d4565b6040870151909450611151816119d4565b60608701516080880151919450925067ffffffffffffffff811115611174578182fd5b6111808882890161106a565b9150509295509295909350565b6000806040838503121561119f578182fd5b82356111aa816119d4565b946020939093013593505050565b6000806000606084860312156111cc578283fd5b833592506020840135915060408401356111e5816119d4565b809150509250925092565b60008060408385031215611202578182fd5b82519150602083015167ffffffffffffffff81111561121f578182fd5b61122b8582860161106a565b9150509250929050565b600060208284031215611246578081fd5b815167ffffffffffffffff81111561125c578182fd5b8201601f8101841361126c578182fd5b61127b84825160208401611035565b949350505050565b60008060008060608587031215611298578384fd5b8435935060208501356112aa816119d4565b9250604085013567ffffffffffffffff808211156112c6578384fd5b818701915087601f8301126112d9578384fd5b8135818111156112e7578485fd5b8860208285010111156112f8578485fd5b95989497505060200194505050565b6000806000806080858703121561131c578182fd5b84359350602085013567ffffffffffffffff8082111561133a578384fd5b61134688838901611089565b9450604087013591508082111561135b578384fd5b5061136887828801611089565b9250506060850135611379816119f9565b939692955090935050565b600060208284031215611395578081fd5b8151610533816119f9565b600081518084526113b8816020860160208601611979565b601f01601f19169290920160200192915050565b60609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b90815260200190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a08301526114d960c08301846113a0565b98975050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8088168352808716602084015280861660408401525083606083015260a0608083015261152c60a08301846113a0565b979650505050505050565b600073ffffffffffffffffffffffffffffffffffffffff808816835280871660208401525060a0604083015261157060a08301866113a0565b828103606084015261158281866113a0565b91505060ff831660808301529695505050505050565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b60006020825261053360208301846113a0565b6000606082526115e460608301866113a0565b82810360208401526115f681866113a0565b91505060ff83166040830152949350505050565b60208082526021908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201527f5200000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f46784d696e7461626c6545524332304368696c6454756e6e656c3a20414c524560408201527f4144595f4d415050454400000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201527f525f46524f4d5f524f4f54000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f467845524332304368696c6454756e6e656c3a20494e56414c49445f53594e4360408201527f5f54595045000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f467845524332304368696c6454756e6e656c3a204e4f5f4d41505045445f544f60408201527f4b454e0000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526021908201527f437265617465323a204661696c6564206f6e206d696e696d616c206465706c6f60408201527f7900000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160408201527f4c52454144595f53455400000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff81118282101715611949576119496119a5565b604052919050565b600067ffffffffffffffff82111561196b5761196b6119a5565b50601f01601f191660200190565b60005b8381101561199457818101518382015260200161197c565b8381111561083c5750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff811681146119f657600080fd5b50565b60ff811681146119f657600080fdfea26469706673582212200adb91c3e0d785db645ec5e30f5d1772c780e4617bdc8b0f133300a820e786fd64736f6c63430008000033";

export class FxMintableERC20ChildTunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fxChild: string,
    _childTokenTemplate: string,
    _rootTokenTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxMintableERC20ChildTunnel> {
    return super.deploy(
      _fxChild,
      _childTokenTemplate,
      _rootTokenTemplate,
      overrides || {}
    ) as Promise<FxMintableERC20ChildTunnel>;
  }
  getDeployTransaction(
    _fxChild: string,
    _childTokenTemplate: string,
    _rootTokenTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fxChild,
      _childTokenTemplate,
      _rootTokenTemplate,
      overrides || {}
    );
  }
  attach(address: string): FxMintableERC20ChildTunnel {
    return super.attach(address) as FxMintableERC20ChildTunnel;
  }
  connect(signer: Signer): FxMintableERC20ChildTunnel__factory {
    return super.connect(signer) as FxMintableERC20ChildTunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxMintableERC20ChildTunnelInterface {
    return new utils.Interface(_abi) as FxMintableERC20ChildTunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxMintableERC20ChildTunnel {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FxMintableERC20ChildTunnel;
  }
}
