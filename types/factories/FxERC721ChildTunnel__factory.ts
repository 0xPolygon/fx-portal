/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FxERC721ChildTunnel,
  FxERC721ChildTunnelInterface,
} from "../FxERC721ChildTunnel";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenTemplate",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "rootToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "childToken",
        type: "address",
      },
    ],
    name: "TokenMapped",
    type: "event",
  },
  {
    inputs: [],
    name: "DEPOSIT",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAP_TOKEN",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PREFIX_SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUFFIX_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "bytecodeHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "deployer",
        type: "address",
      },
    ],
    name: "computedCreate2Address",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxRootTunnel",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stateId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "rootMessageSender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processMessageFromRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rootToChildToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxRootTunnel",
        type: "address",
      },
    ],
    name: "setFxRootTunnel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTemplate",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "childToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001707380380620017078339810160408190526200003491620000c7565b600080546001600160a01b038085166001600160a01b03199283161790925560038054928416929091169190911790556200006f816200009f565b620000975760405162461bcd60e51b81526004016200008e90620000fe565b60405180910390fd5b505062000135565b63ffffffff813b1615155b919050565b80516001600160a01b0381168114620000aa57600080fd5b60008060408385031215620000da578182fd5b620000e583620000af565b9150620000f560208401620000af565b90509250929050565b6020808252601e908201527f546f6b656e2074656d706c617465206973206e6f7420636f6e74726163740000604082015260600190565b6115c280620001456000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637337957f1161008c5780638883709411610066578063888370941461018c5780639a7c4b711461019f578063d81c8e52146101b2578063ea60c7c4146101ba576100df565b80637337957f1461015c5780637f1e9cb01461016f578063886a69ba14610177576100df565b80633740d5a0116100bd5780633740d5a01461013757806339c6c9e01461014c578063450d11f014610154576100df565b80630814d3dd146100e4578063150b7a021461010257806331f0926514610122575b600080fd5b6100ec6101cd565b6040516100f991906110cc565b60405180910390f35b610115610110366004610de5565b6101e9565b6040516100f991906111d1565b610135610130366004610e56565b610213565b005b61013f610405565b6040516100f991906111fe565b61013f61043e565b6100ec610477565b6100ec61016a366004610ee8565b610493565b6100ec6104f0565b61017f61050c565b6040516100f991906111c8565b61013561019a366004610cb2565b610530565b6101356101ad366004610f65565b6105c7565b61017f61065f565b6100ec6101c8366004610cb2565b610683565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b600083905060008173ffffffffffffffffffffffffffffffffffffffff16630a8a49146040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561026257600080fd5b505af1158015610276573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029a9190610cd5565b905073ffffffffffffffffffffffffffffffffffffffff8516158015906102d6575073ffffffffffffffffffffffffffffffffffffffff811615155b801561030b575073ffffffffffffffffffffffffffffffffffffffff8082166000908152600260205260409020548682169116145b61034a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190611328565b60405180910390fd5b6040517f42966c6800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8316906342966c689061039c9087906004016111c8565b600060405180830381600087803b1580156103b657600080fd5b505af11580156103ca573d6000803e3d6000fd5b505050506103fe81863387876040516020016103ea9594939291906110ed565b6040516020818303038152906040526106ab565b5050505050565b6040518060400160405280600281526020017f667800000000000000000000000000000000000000000000000000000000000081525081565b6040518060400160405280600b81526020017f202846584552433732312900000000000000000000000000000000000000000081525081565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60008060ff60f81b8386866040516020016104b19493929190611039565b604080518083037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018152919052805160209091012095945050505050565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b7f2cef46a936bdc5b7e6e8c71aa04560c41cf7d88bb26901a7e7f4936ff02accad81565b60015473ffffffffffffffffffffffffffffffffffffffff1615610580576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103419061143f565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60005473ffffffffffffffffffffffffffffffffffffffff163314610618576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190611211565b610659848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506106e592505050565b50505050565b7f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f82181565b60026020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b7f8c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036816040516106da91906111fe565b60405180910390a150565b600154829073ffffffffffffffffffffffffffffffffffffffff80831691161461073b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610341906112cb565b600080838060200190518101906107529190610f20565b915091507f87a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f82182141561078c57610787816107fd565b6107f5565b7f2cef46a936bdc5b7e6e8c71aa04560c41cf7d88bb26901a7e7f4936ff02accad8214156107c3576107bd816108cf565b506107f5565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034190611385565b505050505050565b6000806000806000858060200190518101906108199190610cf1565b73ffffffffffffffffffffffffffffffffffffffff808616600090815260026020526040908190205490517f94d008ef000000000000000000000000000000000000000000000000000000008152969b5094995092975090955093501690819081906394d008ef906108939088908890889060040161118a565b600060405180830381600087803b1580156108ad57600080fd5b505af11580156108c1573d6000803e3d6000fd5b505050505050505050505050565b600080600080848060200190518101906108e99190610d71565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600260205260409020549396509194509250168015610951576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103419061126e565b6000846040516020016109649190611009565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101206003549091506109c190829073ffffffffffffffffffffffffffffffffffffffff16610b62565b91508173ffffffffffffffffffffffffffffffffffffffff16632016a0d23087876040518060400160405280600b81526020017f2028465845524337323129000000000000000000000000000000000000000000815250604051602001610a2992919061109d565b6040516020818303038152906040526040518060400160405280600281526020017f667800000000000000000000000000000000000000000000000000000000000081525088604051602001610a8092919061109d565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610aae949392919061113f565b600060405180830381600087803b158015610ac857600080fd5b505af1158015610adc573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff85811660008181526002602052604080822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169487169485179055517f85920d35e6c72f6b2affffa04298b0cecfeba86e4a9f407df661f1cb8ab5e6179190a35095945050505050565b6000808260601b90506040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528160148201527f5af43d82803e903d91602b57fd5bf300000000000000000000000000000000006028820152846037826000f592505073ffffffffffffffffffffffffffffffffffffffff8216610c14576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610341906113e2565b5092915050565b60008083601f840112610c2c578182fd5b50813567ffffffffffffffff811115610c43578182fd5b602083019150836020828501011115610c5b57600080fd5b9250929050565b600082601f830112610c72578081fd5b8151610c85610c80826114c6565b61149c565b818152846020838601011115610c99578283fd5b610caa82602083016020870161150c565b949350505050565b600060208284031215610cc3578081fd5b8135610cce81611567565b9392505050565b600060208284031215610ce6578081fd5b8151610cce81611567565b600080600080600060a08688031215610d08578081fd5b8551610d1381611567565b6020870151909550610d2481611567565b6040870151909450610d3581611567565b60608701516080880151919450925067ffffffffffffffff811115610d58578182fd5b610d6488828901610c62565b9150509295509295909350565b600080600060608486031215610d85578283fd5b8351610d9081611567565b602085015190935067ffffffffffffffff80821115610dad578384fd5b610db987838801610c62565b93506040860151915080821115610dce578283fd5b50610ddb86828701610c62565b9150509250925092565b600080600080600060808688031215610dfc578081fd5b8535610e0781611567565b94506020860135610e1781611567565b935060408601359250606086013567ffffffffffffffff811115610e39578182fd5b610e4588828901610c1b565b969995985093965092949392505050565b600080600060608486031215610e6a578283fd5b8335610e7581611567565b925060208401359150604084013567ffffffffffffffff811115610e97578182fd5b8401601f81018613610ea7578182fd5b8035610eb5610c80826114c6565b818152876020838501011115610ec9578384fd5b8160208401602083013783602083830101528093505050509250925092565b600080600060608486031215610efc578283fd5b83359250602084013591506040840135610f1581611567565b809150509250925092565b60008060408385031215610f32578182fd5b82519150602083015167ffffffffffffffff811115610f4f578182fd5b610f5b85828601610c62565b9150509250929050565b60008060008060608587031215610f7a578182fd5b843593506020850135610f8c81611567565b9250604085013567ffffffffffffffff811115610fa7578283fd5b610fb387828801610c1b565b95989497509550505050565b60008151808452610fd781602086016020860161150c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b7fff0000000000000000000000000000000000000000000000000000000000000094909416845260609290921b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000001660018401526015830152603582015260550190565b600083516110af81846020880161150c565b8351908301906110c381836020880161150c565b01949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8088168352808716602084015280861660408401525083606083015260a0608083015261113460a0830184610fbf565b979650505050505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250608060408301526111786080830185610fbf565b82810360608401526111348185610fbf565b600073ffffffffffffffffffffffffffffffffffffffff85168252836020830152606060408301526111bf6060830184610fbf565b95945050505050565b90815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b600060208252610cce6020830184610fbf565b60208082526021908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201527f5200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f46784552433732314368696c6454756e6e656c3a20414c52454144595f4d415060408201527f5045440000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f4678426173654368696c6454756e6e656c3a20494e56414c49445f53454e444560408201527f525f46524f4d5f524f4f54000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f46784552433732314368696c6454756e6e656c3a204e4f5f4d41505045445f5460408201527f4f4b454e00000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f46784552433732314368696c6454756e6e656c3a20494e56414c49445f53594e60408201527f435f545950450000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f437265617465323a204661696c6564206f6e206d696e696d616c206465706c6f60408201527f7900000000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252602a908201527f4678426173654368696c6454756e6e656c3a20524f4f545f54554e4e454c5f4160408201527f4c52454144595f53455400000000000000000000000000000000000000000000606082015260800190565b60405181810167ffffffffffffffff811182821017156114be576114be611538565b604052919050565b600067ffffffffffffffff8211156114e0576114e0611538565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b60005b8381101561152757818101518382015260200161150f565b838111156106595750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461158957600080fd5b5056fea264697066735822122098d3eeedc0b8070eb4da98cc6b85d061bef571737dea8971fbe44601c211866b64736f6c63430008000033";

export class FxERC721ChildTunnel__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _fxChild: string,
    _tokenTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxERC721ChildTunnel> {
    return super.deploy(
      _fxChild,
      _tokenTemplate,
      overrides || {}
    ) as Promise<FxERC721ChildTunnel>;
  }
  getDeployTransaction(
    _fxChild: string,
    _tokenTemplate: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _fxChild,
      _tokenTemplate,
      overrides || {}
    );
  }
  attach(address: string): FxERC721ChildTunnel {
    return super.attach(address) as FxERC721ChildTunnel;
  }
  connect(signer: Signer): FxERC721ChildTunnel__factory {
    return super.connect(signer) as FxERC721ChildTunnel__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxERC721ChildTunnelInterface {
    return new utils.Interface(_abi) as FxERC721ChildTunnelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxERC721ChildTunnel {
    return new Contract(address, _abi, signerOrProvider) as FxERC721ChildTunnel;
  }
}
