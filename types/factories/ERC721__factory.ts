/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611825806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101b8578063b88d4fde146101cb578063c87b56dd146101de578063e985e9c5146101f1576100df565b80636352211e1461017d57806370a082311461019057806395d89b41146101b0576100df565b8063095ea7b3116100bd578063095ea7b31461014257806323b872dd1461015757806342842e0e1461016a576100df565b806301ffc9a7146100e457806306fdde031461010d578063081812fc14610122575b600080fd5b6100f76100f2366004611091565b610204565b60405161010491906111c4565b60405180910390f35b6101156102ae565b60405161010491906111cf565b6101356101303660046110c9565b610340565b604051610104919061115a565b610155610150366004611068565b610399565b005b610155610165366004610f09565b6104c0565b610155610178366004610f09565b6104fd565b61013561018b3660046110c9565b610518565b6101a361019e366004610ebd565b61055a565b6040516101049190611618565b6101156105b8565b6101556101c636600461102e565b6105c7565b6101556101d9366004610f44565b6106e7565b6101156101ec3660046110c9565b610726565b6100f76101ff366004610ed7565b6107a9565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061029757507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b806102a657506102a6826107e4565b90505b919050565b6060600080546102bd90611690565b80601f01602080910402602001604051908101604052809291908181526020018280546102e990611690565b80156103365780601f1061030b57610100808354040283529160200191610336565b820191906000526020600020905b81548152906001019060200180831161031957829003601f168201915b5050505050905090565b600061034b8261082e565b6103705760405162461bcd60e51b815260040161036790611447565b60405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60006103a482610518565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156103f25760405162461bcd60e51b81526004016103679061155e565b8073ffffffffffffffffffffffffffffffffffffffff16610411610858565b73ffffffffffffffffffffffffffffffffffffffff16148061043a575061043a816101ff610858565b6104565760405162461bcd60e51b815260040161036790611330565b610460838361085c565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6104d16104cb610858565b826108af565b6104ed5760405162461bcd60e51b8152600401610367906115bb565b6104f8838383610968565b505050565b6104f8838383604051806020016040528060008152506106e7565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806102a65760405162461bcd60e51b8152600401610367906113ea565b600073ffffffffffffffffffffffffffffffffffffffff821661058f5760405162461bcd60e51b81526004016103679061138d565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b6060600180546102bd90611690565b6105cf610858565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561061a5760405162461bcd60e51b81526004016103679061129c565b8060056000610627610858565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610696610858565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516106db91906111c4565b60405180910390a35050565b6106f86106f2610858565b836108af565b6107145760405162461bcd60e51b8152600401610367906115bb565b61072084848484610b49565b50505050565b60606107318261082e565b61074d5760405162461bcd60e51b815260040161036790611501565b6000610757610b7c565b9050600081511161077757604051806020016040528060008152506107a2565b8061078184610b8e565b60405160200161079292919061112b565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b3390565b600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60006108ba8261082e565b6108d65760405162461bcd60e51b8152600401610367906112d3565b60006108e183610518565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061095057508373ffffffffffffffffffffffffffffffffffffffff1661093884610340565b73ffffffffffffffffffffffffffffffffffffffff16145b80610960575061096081856107a9565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff1661098882610518565b73ffffffffffffffffffffffffffffffffffffffff16146109bb5760405162461bcd60e51b8152600401610367906114a4565b73ffffffffffffffffffffffffffffffffffffffff82166109ee5760405162461bcd60e51b81526004016103679061123f565b6109f98383836104f8565b610a0460008261085c565b806000610a1082610518565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a473ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805460019290610a8890849061164d565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290610ac3908490611621565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610b54848484610968565b610b6084848484610d0f565b6107205760405162461bcd60e51b8152600401610367906111e2565b60408051602081019091526000815290565b606081610bcf575060408051808201909152600181527f300000000000000000000000000000000000000000000000000000000000000060208201526102a9565b8160005b8115610bf95780610be3816116e4565b9150610bf29050600a83611639565b9150610bd3565b60008167ffffffffffffffff811115610c3b577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610c65576020820181803683370190505b5090505b841561096057610c7a60018361164d565b9150610c87600a8661171d565b610c92906030611621565b60f81b818381518110610cce577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610d08600a86611639565b9450610c69565b6000610d308473ffffffffffffffffffffffffffffffffffffffff16610e93565b15610e88578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610d59610858565b8786866040518563ffffffff1660e01b8152600401610d7b949392919061117b565b602060405180830381600087803b158015610d9557600080fd5b505af1925050508015610de3575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610de0918101906110ad565b60015b610e3d573d808015610e11576040519150601f19603f3d011682016040523d82523d6000602084013e610e16565b606091505b508051610e355760405162461bcd60e51b8152600401610367906111e2565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610960565b506001949350505050565b3b151590565b803573ffffffffffffffffffffffffffffffffffffffff811681146102a957600080fd5b600060208284031215610ece578081fd5b6107a282610e99565b60008060408385031215610ee9578081fd5b610ef283610e99565b9150610f0060208401610e99565b90509250929050565b600080600060608486031215610f1d578081fd5b610f2684610e99565b9250610f3460208501610e99565b9150604084013590509250925092565b60008060008060808587031215610f59578081fd5b610f6285610e99565b93506020610f71818701610e99565b935060408601359250606086013567ffffffffffffffff80821115610f94578384fd5b818801915088601f830112610fa7578384fd5b813581811115610fb957610fb961178f565b604051847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401168201018181108482111715610ffa57610ffa61178f565b60405281815283820185018b1015611010578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215611040578182fd5b61104983610e99565b91506020830135801515811461105d578182fd5b809150509250929050565b6000806040838503121561107a578182fd5b61108383610e99565b946020939093013593505050565b6000602082840312156110a2578081fd5b81356107a2816117be565b6000602082840312156110be578081fd5b81516107a2816117be565b6000602082840312156110da578081fd5b5035919050565b600081518084526110f9816020860160208601611664565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000835161113d818460208801611664565b835190830190611151818360208801611664565b01949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526111ba60808301846110e1565b9695505050505050565b901515815260200190565b6000602082526107a260208301846110e1565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527f63656976657220696d706c656d656e7465720000000000000000000000000000606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560408201527f726f206164647265737300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606082015260800190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560408201527f7200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60408201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606082015260800190565b90815260200190565b6000821982111561163457611634611731565b500190565b60008261164857611648611760565b500490565b60008282101561165f5761165f611731565b500390565b60005b8381101561167f578181015183820152602001611667565b838111156107205750506000910152565b6002810460018216806116a457607f821691505b602082108114156116de577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561171657611716611731565b5060010190565b60008261172c5761172c611760565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff00000000000000000000000000000000000000000000000000000000811681146117ec57600080fd5b5056fea2646970667358221220b14c73e718860a9f8abc067a1d87a9cf23244366aa7c3e3dfa0425c10ab4255564736f6c63430008000033";

export class ERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
