/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxERC721, FxERC721Interface } from "../FxERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "connectedToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fxManager",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fxManager_",
        type: "address",
      },
      {
        internalType: "address",
        name: "connectedToken_",
        type: "address",
      },
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setupMetaData",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611fb4806100206000396000f3fe608060405234801561001057600080fd5b50600436106101515760003560e01c806342966c68116100cd5780639b77915311610081578063b88d4fde11610066578063b88d4fde14610299578063c87b56dd146102ac578063e985e9c5146102bf57610151565b80639b7791531461027e578063a22cb4651461028657610151565b806370a08231116100b257806370a082311461024357806394d008ef1461026357806395d89b411461027657610151565b806342966c681461021d5780636352211e1461023057610151565b80630a8a49141161012457806323b872dd1161010957806323b872dd146101e45780633d30498f146101f757806342842e0e1461020a57610151565b80630a8a4914146101c95780632016a0d2146101d157610151565b806301ffc9a71461015657806306fdde031461017f578063081812fc14610194578063095ea7b3146101b4575b600080fd5b6101696101643660046116e8565b6102d2565b604051610176919061187c565b60405180910390f35b61018761037c565b6040516101769190611887565b6101a76101a2366004611781565b61040e565b6040516101769190611812565b6101c76101c236600461166a565b610467565b005b6101a761058e565b6101c76101df366004611519565b6105aa565b6101c76101f236600461159b565b610667565b6101c7610205366004611720565b6106a4565b6101c761021836600461159b565b6106e9565b6101c761022b366004611781565b610704565b6101a761023e366004611781565b610747565b6102566102513660046114cd565b610789565b6040516101769190611daa565b6101c7610271366004611693565b6107e7565b610187610829565b6101a7610838565b6101c7610294366004611630565b610854565b6101c76102a73660046115d6565b610974565b6101876102ba366004611781565b6109ad565b6101696102cd3660046114e7565b610a30565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd00000000000000000000000000000000000000000000000000000000148061036557507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b80610374575061037482610a6b565b90505b919050565b60606000805461038b90611e22565b80601f01602080910402602001604051908101604052809291908181526020018280546103b790611e22565b80156104045780601f106103d957610100808354040283529160200191610404565b820191906000526020600020905b8154815290600101906020018083116103e757829003601f168201915b5050505050905090565b600061041982610ab5565b61043e5760405162461bcd60e51b815260040161043590611ba2565b60405180910390fd5b5060009081526004602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b600061047282610747565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104c05760405162461bcd60e51b815260040161043590611cf0565b8073ffffffffffffffffffffffffffffffffffffffff166104df610adf565b73ffffffffffffffffffffffffffffffffffffffff1614806105085750610508816102cd610adf565b6105245760405162461bcd60e51b815260040161043590611a56565b61052e8383610ae3565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b60075473ffffffffffffffffffffffffffffffffffffffff1690565b60065473ffffffffffffffffffffffffffffffffffffffff161580156105e6575060075473ffffffffffffffffffffffffffffffffffffffff16155b6106025760405162461bcd60e51b815260040161043590611cb9565b6006805473ffffffffffffffffffffffffffffffffffffffff8087167fffffffffffffffffffffffff000000000000000000000000000000000000000092831617909255600780549286169290911691909117905561066182826106a4565b50505050565b610678610672610adf565b82610b36565b6106945760405162461bcd60e51b815260040161043590611d4d565b61069f838383610bef565b505050565b60065473ffffffffffffffffffffffffffffffffffffffff1633146106db5760405162461bcd60e51b815260040161043590611a1f565b6106e58282610dd0565b5050565b61069f83838360405180602001604052806000815250610974565b60065473ffffffffffffffffffffffffffffffffffffffff16331461073b5760405162461bcd60e51b815260040161043590611a1f565b61074481610df7565b50565b60008181526002602052604081205473ffffffffffffffffffffffffffffffffffffffff16806103745760405162461bcd60e51b815260040161043590611b10565b600073ffffffffffffffffffffffffffffffffffffffff82166107be5760405162461bcd60e51b815260040161043590611ab3565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526003602052604090205490565b60065473ffffffffffffffffffffffffffffffffffffffff16331461081e5760405162461bcd60e51b815260040161043590611a1f565b61069f838383610ed0565b60606001805461038b90611e22565b60065473ffffffffffffffffffffffffffffffffffffffff1690565b61085c610adf565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108a75760405162461bcd60e51b81526004016104359061198b565b80600560006108b4610adf565b73ffffffffffffffffffffffffffffffffffffffff90811682526020808301939093526040918201600090812091871680825291909352912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001692151592909217909155610923610adf565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610968919061187c565b60405180910390a35050565b61098561097f610adf565b83610b36565b6109a15760405162461bcd60e51b815260040161043590611d4d565b61066184848484610f03565b60606109b882610ab5565b6109d45760405162461bcd60e51b815260040161043590611c5c565b60006109de610f36565b905060008151116109fe5760405180602001604052806000815250610a29565b80610a0884610f48565b604051602001610a199291906117e3565b6040516020818303038152906040525b9392505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260056020908152604080832093909416825291909152205460ff1690565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b60009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b3390565b600090815260046020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000610b4182610ab5565b610b5d5760405162461bcd60e51b8152600401610435906119c2565b6000610b6883610747565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610bd757508373ffffffffffffffffffffffffffffffffffffffff16610bbf8461040e565b73ffffffffffffffffffffffffffffffffffffffff16145b80610be75750610be78185610a30565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610c0f82610747565b73ffffffffffffffffffffffffffffffffffffffff1614610c425760405162461bcd60e51b815260040161043590611bff565b73ffffffffffffffffffffffffffffffffffffffff8216610c755760405162461bcd60e51b81526004016104359061192e565b610c8083838361069f565b610c8b600082610ae3565b806000610c9782610747565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a473ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260408120805460019290610d0f908490611ddf565b909155505073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290610d4a908490611db3565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b8151610de3906000906020850190611371565b50805161069f906001906020840190611371565b6000610e0282610747565b9050610e108160008461069f565b610e1b600083610ae3565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120805460019290610e51908490611ddf565b909155505060008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555183919073ffffffffffffffffffffffffffffffffffffffff8416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610eda83836110c9565b610ee760008484846111e7565b61069f5760405162461bcd60e51b81526004016104359061189a565b610f0e848484610bef565b610f1a848484846111e7565b6106615760405162461bcd60e51b81526004016104359061189a565b60408051602081019091526000815290565b606081610f89575060408051808201909152600181527f30000000000000000000000000000000000000000000000000000000000000006020820152610377565b8160005b8115610fb35780610f9d81611e76565b9150610fac9050600a83611dcb565b9150610f8d565b60008167ffffffffffffffff811115610ff5577f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040519080825280601f01601f19166020018201604052801561101f576020820181803683370190505b5090505b8415610be757611034600183611ddf565b9150611041600a86611eaf565b61104c906030611db3565b60f81b818381518110611088577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506110c2600a86611dcb565b9450611023565b73ffffffffffffffffffffffffffffffffffffffff82166110fc5760405162461bcd60e51b815260040161043590611b6d565b61110581610ab5565b156111225760405162461bcd60e51b8152600401610435906118f7565b61112e6000838361069f565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260408120805460019290611164908490611db3565b909155505060008181526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006112088473ffffffffffffffffffffffffffffffffffffffff1661136b565b15611360578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02611231610adf565b8786866040518563ffffffff1660e01b81526004016112539493929190611833565b602060405180830381600087803b15801561126d57600080fd5b505af19250505080156112bb575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682019092526112b891810190611704565b60015b611315573d8080156112e9576040519150601f19603f3d011682016040523d82523d6000602084013e6112ee565b606091505b50805161130d5760405162461bcd60e51b81526004016104359061189a565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050610be7565b506001949350505050565b3b151590565b82805461137d90611e22565b90600052602060002090601f01602090048101928261139f57600085556113e5565b82601f106113b857805160ff19168380011785556113e5565b828001600101855582156113e5579182015b828111156113e55782518255916020019190600101906113ca565b506113f19291506113f5565b5090565b5b808211156113f157600081556001016113f6565b803573ffffffffffffffffffffffffffffffffffffffff8116811461037757600080fd5b600082601f83011261143e578081fd5b813567ffffffffffffffff8082111561145957611459611f21565b60405160207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f850116820101818110838211171561149b5761149b611f21565b6040528281528483016020018610156114b2578384fd5b82602086016020830137918201602001929092529392505050565b6000602082840312156114de578081fd5b610a298261140a565b600080604083850312156114f9578081fd5b6115028361140a565b91506115106020840161140a565b90509250929050565b6000806000806080858703121561152e578182fd5b6115378561140a565b93506115456020860161140a565b9250604085013567ffffffffffffffff80821115611561578384fd5b61156d8883890161142e565b93506060870135915080821115611582578283fd5b5061158f8782880161142e565b91505092959194509250565b6000806000606084860312156115af578283fd5b6115b88461140a565b92506115c66020850161140a565b9150604084013590509250925092565b600080600080608085870312156115eb578384fd5b6115f48561140a565b93506116026020860161140a565b925060408501359150606085013567ffffffffffffffff811115611624578182fd5b61158f8782880161142e565b60008060408385031215611642578182fd5b61164b8361140a565b91506020830135801515811461165f578182fd5b809150509250929050565b6000806040838503121561167c578182fd5b6116858361140a565b946020939093013593505050565b6000806000606084860312156116a7578283fd5b6116b08461140a565b925060208401359150604084013567ffffffffffffffff8111156116d2578182fd5b6116de8682870161142e565b9150509250925092565b6000602082840312156116f9578081fd5b8135610a2981611f50565b600060208284031215611715578081fd5b8151610a2981611f50565b60008060408385031215611732578182fd5b823567ffffffffffffffff80821115611749578384fd5b6117558683870161142e565b9350602085013591508082111561176a578283fd5b506117778582860161142e565b9150509250929050565b600060208284031215611792578081fd5b5035919050565b600081518084526117b1816020860160208601611df6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600083516117f5818460208801611df6565b835190830190611809818360208801611df6565b01949350505050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526118726080830184611799565b9695505050505050565b901515815260200190565b600060208252610a296020830184611799565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527f63656976657220696d706c656d656e7465720000000000000000000000000000606082015260800190565b6020808252601c908201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604082015260600190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b6020808252600e908201527f496e76616c69642073656e646572000000000000000000000000000000000000604082015260600190565b60208082526038908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760408201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606082015260800190565b6020808252602a908201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560408201527f726f206164647265737300000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606082015260800190565b6020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960408201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606082015260800190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606082015260800190565b6020808252601c908201527f546f6b656e20697320616c726561647920696e697469616c697a656400000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560408201527f7200000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60408201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606082015260800190565b90815260200190565b60008219821115611dc657611dc6611ec3565b500190565b600082611dda57611dda611ef2565b500490565b600082821015611df157611df1611ec3565b500390565b60005b83811015611e11578181015183820152602001611df9565b838111156106615750506000910152565b600281046001821680611e3657607f821691505b60208210811415611e70577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611ea857611ea8611ec3565b5060010190565b600082611ebe57611ebe611ef2565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7fffffffff000000000000000000000000000000000000000000000000000000008116811461074457600080fdfea2646970667358221220b9c16351e359510c2a6b02601aabd28277497f1b408426f9507bdc9d09cdb0f864736f6c63430008000033";

export class FxERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxERC721> {
    return super.deploy(overrides || {}) as Promise<FxERC721>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): FxERC721 {
    return super.attach(address) as FxERC721;
  }
  connect(signer: Signer): FxERC721__factory {
    return super.connect(signer) as FxERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxERC721Interface {
    return new utils.Interface(_abi) as FxERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FxERC721 {
    return new Contract(address, _abi, signerOrProvider) as FxERC721;
  }
}
