/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC1155Holder, ERC1155HolderInterface } from "../ERC1155Holder";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c811461006f578063f23a6e611461008f575b600080fd5b6100596100543660046103d6565b6100a2565b604051610066919061041d565b60405180910390f35b61008261007d3660046102cd565b610100565b6040516100669190610428565b61008261009d366004610373565b61012a565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e00000000000000000000000000000000000000000000000000000000014806100f857506100f882610154565b90505b919050565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b7fffffffff0000000000000000000000000000000000000000000000000000000081167f01ffc9a70000000000000000000000000000000000000000000000000000000014919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146100fb57600080fd5b600082601f8301126101d2578081fd5b8135602067ffffffffffffffff8211156101ee576101ee61047f565b8082026101fc828201610455565b838152828101908684018388018501891015610216578687fd5b8693505b8584101561023857803583526001939093019291840191840161021a565b50979650505050505050565b600082601f830112610254578081fd5b813567ffffffffffffffff81111561026e5761026e61047f565b61029f60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610455565b8181528460208386010111156102b3578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a086880312156102e4578081fd5b6102ed8661019e565b94506102fb6020870161019e565b9350604086013567ffffffffffffffff80821115610317578283fd5b61032389838a016101c2565b94506060880135915080821115610338578283fd5b61034489838a016101c2565b93506080880135915080821115610359578283fd5b5061036688828901610244565b9150509295509295909350565b600080600080600060a0868803121561038a578081fd5b6103938661019e565b94506103a16020870161019e565b93506040860135925060608601359150608086013567ffffffffffffffff8111156103ca578182fd5b61036688828901610244565b6000602082840312156103e7578081fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610416578182fd5b9392505050565b901515815260200190565b7fffffffff0000000000000000000000000000000000000000000000000000000091909116815260200190565b60405181810167ffffffffffffffff811182821017156104775761047761047f565b604052919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fdfea26469706673582212208a0e40139dc3b37fe7261336fbca6773647dfc1595e8d948f02791841c54f89c64736f6c63430008000033";

export class ERC1155Holder__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155Holder> {
    return super.deploy(overrides || {}) as Promise<ERC1155Holder>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC1155Holder {
    return super.attach(address) as ERC1155Holder;
  }
  connect(signer: Signer): ERC1155Holder__factory {
    return super.connect(signer) as ERC1155Holder__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155HolderInterface {
    return new utils.Interface(_abi) as ERC1155HolderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Holder {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Holder;
  }
}
